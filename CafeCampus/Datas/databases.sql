CREATE TABLE utilisateurs (
    id_utilisateur NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nom_utilisateur VARCHAR2(50) UNIQUE NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    mot_de_passe VARCHAR2(255) NOT NULL, -- Le mot de passe sera hashé (ex: bcrypt)
    date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--procedure d'inscription--

CREATE OR REPLACE PROCEDURE inscrire_utilisateur (
    p_nom_utilisateur IN VARCHAR2,
    p_email IN VARCHAR2,
    p_mot_de_passe IN VARCHAR2
) AS
BEGIN
    INSERT INTO utilisateurs (nom_utilisateur, email, mot_de_passe)
    VALUES (p_nom_utilisateur, p_email, STANDARD_HASH(p_mot_de_passe, 'SHA256'));
    
    COMMIT;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE('Cet utilisateur ou email existe déjà.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erreur : ' || SQLERRM);
END;
/

-- procedure de connexion --
CREATE OR REPLACE PROCEDURE connexion_utilisateur (
    p_email IN VARCHAR2,
    p_mot_de_passe IN VARCHAR2,
    p_resultat OUT VARCHAR2
) AS
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count
    FROM utilisateurs
    WHERE email = p_email AND mot_de_passe = STANDARD_HASH(p_mot_de_passe, 'SHA256');
    
    IF v_count = 1 THEN
        p_resultat := 'Connexion réussie';
    ELSE
        p_resultat := 'Email ou mot de passe incorrect';
    END IF;
END;
/

